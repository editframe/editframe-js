name: Release Dev

on:
  push:
    branches: [ dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: act10ns/slack@v1
        with:
          status: starting
          channel: '#ci-cd'
          config: .github/config/slack.yml
        if: always()
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm install
      - run: npm run build
      - run: npm run lint
      - run: npm run test
      - run: npm run docs
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#ci-cd'
          config: .github/config/slack.yml
        if: always()

  release_dev:
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    needs: test
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: act10ns/slack@v1
        with:
          status: starting
          channel: '#ci-cd'
          config: .github/config/slack.yml
        if: always()
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - run: npm install
      - run: npm run build
      - name: HTTP Request Action
        uses: fjogeleit/http-request-action@v1.9.2
        with:
          url: ${{ secrets.FORGE_DEPLOY_WEBHOOK }}
          method: 'GET'
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#ci-cd'
          config: .github/config/slack.yml
        if: always()
